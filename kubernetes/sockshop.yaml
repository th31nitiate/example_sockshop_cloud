# Default values for sock-shop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
    registry: 'us-central1-docker.pkg.dev/peppy-glyph-388514/sock-shop'
    namespace: 'sock-shop'

java:
    options: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom

istio:
    enabled: false

ingress:
    annotations:
        kubernetes.io/ingress.class: nginx
    labels: {}
    host: 'sockshop.foo.org'
    tlsSecretName: ''

cartsdb:
    image:
        repo: mongo
        tag: 4.4.0
    persistentVolume:
        storageClass: ''
        size: 512Mi

carts:
    image:
        repo: carts
        tag: 0.4.8
    containerPort: 80
    resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 200Mi

cataloguedb:
    image:
        repo: catalogue-db
        tag: 0.3.0

catalogue:
    image:
        repo: catalogue
        tag: 0.3.5
    containerPort: 80
    resources:
        limits:
            cpu: 100m
            memory: 100Mi
        requests:
            cpu: 100m
            memory: 100Mi

frontend:
    replicas: 1
    image:
        repo: front-end
        tag: 0.3.12
    resources:
        limits:
            cpu: 300m
            memory: 1000Mi
        requests:
            cpu: 100m
            memory: 300Mi


loadtest:
    replicas: 2
    enabled: false
    image:
        repo: load-test
        tag: 0.1.1
    resources:
        limits:
            cpu: 200m
            memory: 500Mi
        requests:
            cpu: 100m
            memory: 300Mi

ordersdb:
    image:
        repo: mongo
        tag: 4.4.0
    persistentVolume:
        storageClass: ''
        size: 512Mi

orders:
    image:
        repo: orders
        tag: 0.4.7
    containerPort: 80
    resources:
      limits:
        cpu: 300m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 300Mi

payment:
    image:
        repo: payment
        tag: 0.4.3
    declinePaymentsOverAmount: 200
    containerPort: 8080
    resources:
        limits:
            cpu: 100m
            memory: 100Mi
        requests:
            cpu: 100m
            memory: 100Mi

queuemaster:
    image:
        repo: queue-master
        tag: 0.3.1
    resources:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 300Mi

rabbitmq:
    image:
        repo: rabbitmq
        tag: 3.6.8
    resources:
        requests:
            memory: 256Mi
            cpu: 150m
        limits:
            memory: 512Mi
            cpu: 350m

sessiondb:
    image:
        repo: redis
        tag: alpine
    resources:
        requests:
            memory: 256Mi
            cpu: 150m
        limits:
            memory: 256Mi
            cpu: 150m
    persistentVolume:
        storageClass: ''
        size: 512Mi

shipping:
    image:
        repo: shipping
        tag: 0.4.8
    containerPort: 80
    resources:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 300Mi
userdb:
    image:
        repo: user-db
        tag: 0.4.0
    resources:
        limits:
            cpu: 200m
            memory: 1000Mi
        requests:
            cpu: 100m
            memory: 300Mi

user:
    image:
        repo: user
        tag: 0.4.7
    containerPort: 80
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi

zipkincron:
    enabled: false

zipkin:
    enabled: false


zipkinmysql:
    enabled: false

